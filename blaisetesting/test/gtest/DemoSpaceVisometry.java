/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LineVisometryTest.java
 *
 * Created on May 12, 2010, 7:46:47 AM
 */

package gtest;

import data.propertysheet.PropertySheet;
import visometry.space.*;

/**
 *
 * @author ae3263
 */
public class DemoSpaceVisometry extends javax.swing.JFrame {

    SpacePlotComponent p1, p2, p3;

    SpaceAxes sa1, sa2;

    SpaceBox sb;

    SpaceFunctionGraph sfg;
    SpaceParametricCurve spc;

    SpaceVectorField svf;

    /** Creates new form LineVisometryTest */
    public DemoSpaceVisometry() {
        data.propertysheet.editor.EditorRegistration.registerEditors();
        
        initComponents();

        tabs.add("Basic", p1 = new SpacePlotComponent());
        tabs.add("Functions", p2 = new SpacePlotComponent());
        tabs.add("Fields", p3 = new SpacePlotComponent());

        p1.add(sb = new SpaceBox());
        props.add("1 Visometry", new PropertySheet(p1.getVisometry()));
        props.add("1 Space Box", new PropertySheet(sb));

        p2.add(sa1 = new SpaceAxes("x", "y", "z"));
        p2.add(sfg = new SpaceFunctionGraph());
        p2.add(spc = new SpaceParametricCurve());
        props.add("2 Visometry", new PropertySheet(p2.getVisometry()));
        props.add("2 Axes", new PropertySheet(sa1));
        props.add("2 Space Function Graph", new PropertySheet(sfg));
        props.add("2 Space Parametric Curve", new PropertySheet(spc));

        p3.add(sa2 = new SpaceAxes("x", "y", "z"));
        p3.add(svf = new SpaceVectorField());
        props.add("3 Axes", new PropertySheet(sa2));
        props.add("3 Vector Field", new PropertySheet(svf));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        props = new gui.RollupPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Space Visometry Test");

        jScrollPane1.setViewportView(props);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(tabs, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(tabs, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DemoSpaceVisometry().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private gui.RollupPanel props;
    private javax.swing.JTabbedPane tabs;
    // End of variables declaration//GEN-END:variables

}
