/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LineVisometryTest.java
 *
 * Created on May 12, 2010, 7:46:47 AM
 */

package gtest;

import data.propertysheet.PropertySheet;
import java.awt.geom.Point2D;
import visometry.plane.*;
import visometry.plottable.*;

/**
 *
 * @author ae3263
 */
public class DemoPlaneVisometry extends javax.swing.JFrame {

    PlanePlotComponent p1, p2, p3, p4, p5;
    PlaneGrid pg1, pg2, pg3, pg4, pg5;
    PlanePolarGrid ppg4;
    PlaneAxes pa1, pa2, pa3, pa4, pa5;

    PlaneRectangle pr;
    PlaneTriangle pt;

    VClock vc;
    VLine vl;
    VPath vp;
    VPoint vpt;
    VPointSet vps;
    VRay vr;
    VSegment vs;
    VShape vsh;
    
    PlaneFunctionGraph pfg;
    VConstrainedPoint<Point2D.Double> vcp1;

    PlaneParametricArea ppa;
    PlaneParametricCurve ppc;

    PlaneVectorField pvf;

    /** Creates new form LineVisometryTest */
    public DemoPlaneVisometry() {
        data.propertysheet.editor.EditorRegistration.registerEditors();
        
        initComponents();

        tabs.add("Geometric", p1 = new PlanePlotComponent());
        tabs.add("Generic", p2 = new PlanePlotComponent());
        tabs.add("Functions", p3 = new PlanePlotComponent());
        tabs.add("Parametrics", p4 = new PlanePlotComponent());
        tabs.add("Fields", p5 = new PlanePlotComponent());

        p1.add(pr = new PlaneRectangle());
        p1.add(pt = new PlaneTriangle());
        props.add("Visometry 1", new PropertySheet(p1.getVisometry()));
        props.add("Rectangle 1", new PropertySheet(pr));
        props.add("Triangle 1", new PropertySheet(pt));

        p2.add(vc = new VClock<Point2D.Double>(new Point2D.Double(.8, .5)));
        p2.add(vl = new VLine<Point2D.Double>(new Point2D.Double(-5,5), new Point2D.Double(2,2)));
        p2.add(vp = new VPath<Point2D.Double>(new Point2D.Double(-.1,.1), new Point2D.Double(-.2,.4), new Point2D.Double(-.3,.9), new Point2D.Double(-.4,1.6)));
        p2.add(vpt = new VPoint<Point2D.Double>(new Point2D.Double(.5, .5)));
        p2.add(vps = new VPointSet<Point2D.Double>(new Point2D.Double(5,1), new Point2D.Double(5,1.2), new Point2D.Double(5,1.3), new Point2D.Double(5,1.4)));
        p2.add(vr = new VRay<Point2D.Double>(new Point2D.Double(5,5), new Point2D.Double(-2,2)));
        p2.add(vs = new VSegment<Point2D.Double>(new Point2D.Double(1,2), new Point2D.Double(-.2,.2)));
        p2.add(vsh = new VShape<Point2D.Double>(new Point2D.Double(.1,-.1), new Point2D.Double(.2,-.4), new Point2D.Double(.3,-.9), new Point2D.Double(.4,-1.6)));
        props.add("Generic Clock 2", new PropertySheet(vc));
        props.add("Generic Line 2", new PropertySheet(vl));
        props.add("Generic Path 2", new PropertySheet(vp));
        props.add("Generic Point 2", new PropertySheet(vpt));
        props.add("Generic PointSet 2", new PropertySheet(vps));
        props.add("Generic Ray 2", new PropertySheet(vr));
        props.add("Generic Segment 2", new PropertySheet(vs));
        props.add("Generic Shape 2", new PropertySheet(vsh));

        p3.add(pg3 = new PlaneGrid());
        p3.add(pa3 = new PlaneAxes("x", "y", PlaneAxes.AxesType.UPPER_HALF));
        p3.add(pfg = new PlaneFunctionGraph());
        p3.add(vcp1 = new VConstrainedPoint<Point2D.Double>(new Point2D.Double(-2,2), pfg));
        props.add("Grid 3", new PropertySheet(pg3));
        props.add("Axes 3", new PropertySheet(pa3));
        props.add("Function 3", new PropertySheet(pfg));
        props.add("Constrained Point 3", new PropertySheet(vcp1));

        p4.add(ppg4 = new PlanePolarGrid());
        p4.add(pa4 = new PlaneAxes("x", "y", PlaneAxes.AxesType.STANDARD));
        ppa = new PlaneParametricArea();
        p4.add(ppa.getDomainPlottable());
        p4.add(ppa);
        p4.add(ppc = new PlaneParametricCurve());
        props.add("Parametric Area 4", new PropertySheet(ppa));
        props.add("Parametric Area Domain 4", new PropertySheet(ppa.getDomainPlottable()));
        props.add("Parametric Curve 4", new PropertySheet(ppc));

        p5.add(pg5 = new PlaneGrid());
        p5.add(pa5 = new PlaneAxes("u", "v", PlaneAxes.AxesType.BOX));
        p5.add(pvf = new PlaneVectorField());
        props.add("Vector Field 5", new PropertySheet(pvf));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        props = new gui.RollupPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Line Visometry Test");

        jScrollPane1.setViewportView(props);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(tabs, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(tabs, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DemoPlaneVisometry().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private gui.RollupPanel props;
    private javax.swing.JTabbedPane tabs;
    // End of variables declaration//GEN-END:variables

}
