package sequor.control.gestures;

/*
 * _GestureTest.java
 *
 * Created on March 26, 2008, 2:57 PM
 */



import sequor.control.gestures.*;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import sequor.control.DrawnPath;
import specto.euclidean2.Segment2D;
import specto.euclidean2.Function2D;
import specto.euclidean2.Parametric2D;

/**
 *
 * @author  ae3263
 */
public class _GestureTest extends javax.swing.JFrame {
    
    /** Creates new form _GestureTest */
    public _GestureTest() {
        initComponents();
        plot2D1.getBasePlottables().clear();
        GestureInputPath gip=new GestureInputPath(Color.BLACK,DrawnPath.PEN);
        GestureController gc=new GestureController(GestureGenerator.getStringMap());        
        gip.addGestureListener(gc);
        gc.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e) {
                String s=e.getActionCommand();
                System.out.println("command: "+s);
                if(s.equals("circle")){
                    plot2D1.add(new Parametric2D("cos(x),sin(x)"));
                }else if(s.equals("zagright") || s.equals("zagleft")){
                    plot2D1.add(new Function2D("cos(x)"));
                }else if(s.equals("leftright") || s.equals("rightleft")){
                    plot2D1.add(new Segment2D(Math.random(),Math.random(),Math.random(),Math.random()));
                }
            }
        });
        plot2D1.add(gip);
        gip.setVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        plot2D1 = new specto.euclidean2.Plot2D();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout plot2D1Layout = new javax.swing.GroupLayout(plot2D1);
        plot2D1.setLayout(plot2D1Layout);
        plot2D1Layout.setHorizontalGroup(
            plot2D1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        plot2D1Layout.setVerticalGroup(
            plot2D1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(plot2D1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(plot2D1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new _GestureTest().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private specto.euclidean2.Plot2D plot2D1;
    // End of variables declaration//GEN-END:variables
    
}
