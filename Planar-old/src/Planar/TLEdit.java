/*
 * PermutationEdit.java
 *
 * Created on March 9, 2007, 11:29 AM
 */

package Planar;

import Planar.*;
import Planar.FiniteGridPlot;
import Planar.VisualPermutation;
import PlanarAlgebra.FiniteGridGeometry;
import PlanarAlgebra.PermutationModel;
import PlanarAlgebra.TLModel;
import java.awt.Point;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.EventListenerList;

/**
 *
 * @author  ae3263
 */
public class TLEdit extends javax.swing.JPanel {
    /**
     * Creates new form PermutationEdit
     */
    public TLEdit() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        pModel = new PlanarAlgebra.PermutationModel();
        geo = new PlanarAlgebra.FiniteGridGeometry();
        tlModel = new PlanarAlgebra.TLModel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        ncInput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        tlInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tlOutput = new javax.swing.JTextField();
        tlPlot = new Planar.FiniteGridPlot();
        visualTL1 = new Planar.VisualTL();

        geo.setWindow(tlPlot);

        tlModel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tlModelStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24));
        jLabel3.setText("O");

        ncInput.setText("0");
        ncInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ncInputKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel1.setText("in TL(");

        tlInput.setText("2");
        tlInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tlInputKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tlInputKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel2.setText(")");

        tlOutput.setEditable(false);
        tlOutput.setFont(new java.awt.Font("Tahoma", 0, 9));
        tlOutput.setText(tlModel.getLongString());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tlOutput, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(4, 4, 4)
                .addComponent(ncInput, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tlInput, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ncInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tlInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tlOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tlPlot.setGeometry(geo);

        visualTL1.setGeometry(geo);
        visualTL1.setModel(tlModel);

        javax.swing.GroupLayout visualTL1Layout = new javax.swing.GroupLayout(visualTL1);
        visualTL1.setLayout(visualTL1Layout);
        visualTL1Layout.setHorizontalGroup(
            visualTL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 71, Short.MAX_VALUE)
        );
        visualTL1Layout.setVerticalGroup(
            visualTL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 61, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout tlPlotLayout = new javax.swing.GroupLayout(tlPlot);
        tlPlot.setLayout(tlPlotLayout);
        tlPlotLayout.setHorizontalGroup(
            tlPlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(visualTL1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tlPlotLayout.setVerticalGroup(
            tlPlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(visualTL1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(tlPlot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tlPlot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void ncInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ncInputKeyTyped
        tlModel.setNC(Integer.valueOf(tlInput.getText()));
    }//GEN-LAST:event_ncInputKeyTyped
    
    private void tlModelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tlModelStateChanged
        tlInput.setText(Integer.toString(tlModel.getLength()));
        ncInput.setText(Integer.toString(tlModel.getNC()));
        tlOutput.setText(tlModel.getLongString());
        fireStateChanged();
        geo.setMax(new Point(tlModel.getLength()-1,1));
        tlPlot.repaint();
    }//GEN-LAST:event_tlModelStateChanged
    
    private void tlInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tlInputKeyReleased
        tlInputKeyTyped(evt);
    }//GEN-LAST:event_tlInputKeyReleased
    
    private void tlInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tlInputKeyTyped
        tlModel.setLength(Integer.valueOf(tlInput.getText()));
    }//GEN-LAST:event_tlInputKeyTyped
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TLEdit().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private PlanarAlgebra.FiniteGridGeometry geo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField ncInput;
    private PlanarAlgebra.PermutationModel pModel;
    private javax.swing.JTextField tlInput;
    private PlanarAlgebra.TLModel tlModel;
    private javax.swing.JTextField tlOutput;
    private Planar.FiniteGridPlot tlPlot;
    private Planar.VisualTL visualTL1;
    // End of variables declaration//GEN-END:variables
    
    // Getters & Setters
    public void setModel(TLModel tlm){tlModel=new TLModel(tlm.getValue());}
    public TLModel getModel(){return tlModel;}
    
    /*
     * The rest of this is event handling code copied from
     * DefaultBoundedRangeModel.
     */
    protected ChangeEvent changeEvent = null;
    protected EventListenerList listenerList = new EventListenerList();
    
    public void addChangeListener(ChangeListener l) {
        listenerList.add(ChangeListener.class, l);
    }
    
    public void removeChangeListener(ChangeListener l) {
        listenerList.remove(ChangeListener.class, l);
    }
    
    protected void fireStateChanged() {
        Object[] listeners = listenerList.getListenerList();
        for (int i = listeners.length - 2; i >= 0; i -=2 ) {
            if (listeners[i] == ChangeListener.class) {
                if (changeEvent == null) {
                    changeEvent = new ChangeEvent(this);
                }
                ((ChangeListener)listeners[i+1]).stateChanged(changeEvent);
            }
        }
    }
}
