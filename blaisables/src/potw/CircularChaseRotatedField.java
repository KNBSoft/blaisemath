/*
 * CircularChaseRotatedField.java
 *
 * Created on March 20, 2008, 10:10 AM
 */

package potw;

import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author  ae3263
 */
public class CircularChaseRotatedField extends javax.swing.JApplet {
    
    /** Initializes the applet CircularChaseRotatedField */
    public void init() {
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    try {
                        initComponents();
                        parametric2D1.setFunction("10*cos(2*pi*t)", "10*sin(2*pi*t)");
                        plot2D1.add(parametric2D1);
//                        vectorField2D1.setFunction(new Function<R2, R2>() {
//                            FunctionTreeRoot vfx = new FunctionTreeRoot(Parser.parseExpression("pi*y+5*pi*(10-x)/sqrt(y^2+(10-x)^2)"));
//                            FunctionTreeRoot vfy = new FunctionTreeRoot(Parser.parseExpression("-pi*x-5*pi*y/sqrt(y^2+(10-x)^2)"));
//
//                            public R2 getValue(R2 x) {
//                                try {
//                                    TreeMap<String, Double> inTable = new TreeMap<String, Double>();
//                                    inTable.put("x", x.x);
//                                    inTable.put("y", x.y);
//                                    return new R2(vfx.getValue(inTable), vfy.getValue(inTable));
//                                } catch (FunctionValueException ex) {
//                                    return new R2();
//                                }
//                            }
//
//                            @Override
//                            public Vector<R2> getValue(Vector<R2> x) {
//                                Vector<R2> result = new Vector<R2>(x.size());
//                                for (R2 d : x) {
//                                    result.add(getValue(d));
//                                }
//                                return result;
//                            }
//                        });
                        plot2D1.add(vectorField2D1);
                    } catch (Exception ex) {
                        Logger.getLogger(CircularChaseRotatedField.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        vectorField2D1 = new specto.euclidean2.VectorField2D();
        parametric2D1 = new specto.euclidean2.Parametric2D();
        plot2D1 = new specto.euclidean2.Plot2D();

        javax.swing.GroupLayout plot2D1Layout = new javax.swing.GroupLayout(plot2D1);
        plot2D1.setLayout(plot2D1Layout);
        plot2D1Layout.setHorizontalGroup(
            plot2D1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        plot2D1Layout.setVerticalGroup(
            plot2D1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(plot2D1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(plot2D1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private specto.euclidean2.Parametric2D parametric2D1;
    private specto.euclidean2.Plot2D plot2D1;
    private specto.euclidean2.VectorField2D vectorField2D1;
    // End of variables declaration//GEN-END:variables
    
}
