/*
 * BlaisePlotter.java
 *
 * Created on November 9, 2007, 1:36 PM
 */

package curro;

import specto.decoration.DESolution2D;
import specto.dynamicplottable.Point2D;
import specto.plottable.Function2D;
import specto.plottable.Parametric2D;
import specto.plottable.PlaneFunction2D;
import specto.plottable.VectorField2D;
import specto.visometry.Euclidean2;

/**
 *
 * @author  ae3263
 */
public class SamplePlotters extends javax.swing.JFrame {
    
    /** Creates new form BlaisePlotter */
    public SamplePlotters() {
        initComponents();
        basicPlot.add(new Function2D(basicInput.getFunctionModel(0)));
        parametricPlot.add(new Parametric2D(parametricInput.getFunctionModel(0),parametricInput.getFunctionModel(1)));
        VectorField2D vf1=new VectorField2D(vectorFieldInput.getFunctionModel(0),vectorFieldInput.getFunctionModel(1));
        vectorFieldPlot.add(vf1);
        vectorFieldPlot.add(new DESolution2D(vf1));
        vectorFieldPlot.add(new DESolution2D(vf1));
        surfacePlot.add(new PlaneFunction2D(surfaceInput.getFunctionModel(0)));
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        surfaceInput = new sequor.component.FunctionPanel();
        vectorFieldInput = new sequor.component.FunctionPanel(2);
        parametricInput = new sequor.component.FunctionPanel(2);
        jSplitPane1 = new javax.swing.JSplitPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        basicPlot = new specto.plotpanel.Plot2D();
        parametricPlot = new specto.plotpanel.Plot2D();
        vectorFieldPlot = new specto.plotpanel.Plot2D();
        surfacePlot = new specto.plotpanel.Plot2D();
        basicInput = new sequor.component.FunctionPanel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(50);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout basicPlotLayout = new javax.swing.GroupLayout(basicPlot);
        basicPlot.setLayout(basicPlotLayout);
        basicPlotLayout.setHorizontalGroup(
            basicPlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 392, Short.MAX_VALUE)
        );
        basicPlotLayout.setVerticalGroup(
            basicPlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 247, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Basic", basicPlot);

        javax.swing.GroupLayout parametricPlotLayout = new javax.swing.GroupLayout(parametricPlot);
        parametricPlot.setLayout(parametricPlotLayout);
        parametricPlotLayout.setHorizontalGroup(
            parametricPlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 392, Short.MAX_VALUE)
        );
        parametricPlotLayout.setVerticalGroup(
            parametricPlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 247, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Parametric", parametricPlot);

        javax.swing.GroupLayout vectorFieldPlotLayout = new javax.swing.GroupLayout(vectorFieldPlot);
        vectorFieldPlot.setLayout(vectorFieldPlotLayout);
        vectorFieldPlotLayout.setHorizontalGroup(
            vectorFieldPlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 392, Short.MAX_VALUE)
        );
        vectorFieldPlotLayout.setVerticalGroup(
            vectorFieldPlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 247, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Field", vectorFieldPlot);

        javax.swing.GroupLayout surfacePlotLayout = new javax.swing.GroupLayout(surfacePlot);
        surfacePlot.setLayout(surfacePlotLayout);
        surfacePlotLayout.setHorizontalGroup(
            surfacePlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 392, Short.MAX_VALUE)
        );
        surfacePlotLayout.setVerticalGroup(
            surfacePlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 247, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Surface", surfacePlot);

        jSplitPane1.setRightComponent(jTabbedPane1);
        jSplitPane1.setLeftComponent(basicInput);

        fileMenu.setText("File");

        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setText("Save As ...");
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setText("Edit");

        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setText("Help");

        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        if(jTabbedPane1.getSelectedComponent() == basicPlot) {
            jSplitPane1.setTopComponent(basicInput);
        } else if(jTabbedPane1.getSelectedComponent() == surfacePlot) {
            jSplitPane1.setTopComponent(surfaceInput);
        } else if(jTabbedPane1.getSelectedComponent() == parametricPlot) {
            jSplitPane1.setTopComponent(parametricInput);
        } else if(jTabbedPane1.getSelectedComponent() == vectorFieldPlot) {
            jSplitPane1.setTopComponent(vectorFieldInput);
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SamplePlotters().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private sequor.component.FunctionPanel basicInput;
    private specto.plotpanel.Plot2D basicPlot;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private sequor.component.FunctionPanel parametricInput;
    private specto.plotpanel.Plot2D parametricPlot;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private sequor.component.FunctionPanel surfaceInput;
    private specto.plotpanel.Plot2D surfacePlot;
    private sequor.component.FunctionPanel vectorFieldInput;
    private specto.plotpanel.Plot2D vectorFieldPlot;
    // End of variables declaration//GEN-END:variables
    
}
