#summary Description of blaise's graphics and style architecture
#labels Module-Blaise,Phase-Implementation,Component-Plottable
#sidebar TableOfContents

Most `Graphic`s in BlaiseGraphics separate the "basic object" represented by the graphic from its appearance (e.g. separation of the rectangle from fill and stroke).

= Available Graphics Classes =
The available graphics classes are summarized below:
 * Shapes
  * `BasicShapeGraphic`
  * `DelegatingShapeGraphic`
  * `LabeledShapeGraphic`
 * Strings
  * `BasicStringGraphic`
 * Points
  * `BasicPointGraphic`
  * `DelegatingPointGraphic`
 * Point sets
  * `BasicPointSetGraphic`
  * `DelegatingPointSetGraphic`
 * Other
  * `DelegatingEdgeSetGraphic`
  * `DelegatingNodeLinkGraphic`

Two patterns are generally used for graphics. "Basic" graphics classes include style information directly within the class, while "delegating" graphics classes defer to an `ObjectStyler` to provide style information. The next section describes more about how style is handled.

= Graphics and Styles =
While styles are not part of the `Graphic` class API, most implementations of `Graphic` make use of styles to render the graphics. BlaiseGraphics has four style interfaces:
 * `PointStyle` (draws a point, or point+angle)
 * `PathStyle` (has stroke and thickness, draws a shape)
 * `ShapeStyle` (draws a shape)
 * `StringStyle` (draws a point+string, provides bounding box information)