/*
 * PEGApplet.java
 *
 * Created on October 29, 2007, 10:58 AM
 */

package curro;

import java.awt.Color;
import java.awt.Component;
import javax.swing.BoxLayout;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import scio.coordinate.R2;

/**
 *
 * @author  ae3263
 */
public class PEGApplet extends javax.swing.JApplet {
    
    simulation.Simulation simulation1;
    
    /** Initializes the applet PEGApplet */
    public void init() {
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    simulation1=new simulation.Simulation();

                    simulation1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            simulation1ActionPerformed(evt);
                        }
                    });
                    initComponents();        
                    jTree1.setModel(simulation1.getTreeModel());
                    plot2D1.getVisometry().setBounds(new R2(-50,-50),new R2(50,50));
                    simulation1.setAnimationCycle(plot2D1);
                    simulation1.run();
                    simulation1.placeInitialPointsOn(plot2D1);
                    simulation1.placeGraphsOn(plot2D1);
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        jToolBar1 = new javax.swing.JToolBar();
        resetButton = new javax.swing.JButton();
        runButton = new javax.swing.JButton();
        plot2D1 = new specto.euclidean2.Plot2D();

        jSplitPane2.setDividerLocation(300);

        jTabbedPane1.setMaximumSize(new java.awt.Dimension(450, 600));

        jScrollPane3.setViewportView(simulation1.getPanel());
        jTabbedPane1.addTab("Simulation", jScrollPane3);

        jSplitPane1.setDividerLocation(130);
        jSplitPane1.setResizeWeight(0.5);
        jSplitPane1.setContinuousLayout(true);
        jSplitPane1.setMaximumSize(new java.awt.Dimension(500, 324));
        jSplitPane1.setOneTouchExpandable(true);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 23));

        jTree1.setCellRenderer(new MyTreeCellRenderer(createImageIcon("images/teamicon.gif"),createImageIcon("images/teamicon2.gif"),createImageIcon("images/agenticon.gif")));
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        jSplitPane1.setLeftComponent(jScrollPane1);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(100, 23));
        jSplitPane1.setRightComponent(jScrollPane2);

        jTabbedPane1.addTab("Teams/Agents", jSplitPane1);

        jToolBar1.setFloatable(false);

        resetButton.setFont(new java.awt.Font("Tahoma", 1, 14));
        resetButton.setText("RESET");
        resetButton.setToolTipText("Click here to reset the simulation and re-randomize starting positions.");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(resetButton);

        runButton.setFont(new java.awt.Font("Tahoma", 1, 14));
        runButton.setText("RUN!!");
        runButton.setToolTipText("Click here to run the simulation again.");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(runButton);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE))
        );

        jSplitPane2.setLeftComponent(jPanel1);

        javax.swing.GroupLayout plot2D1Layout = new javax.swing.GroupLayout(plot2D1);
        plot2D1.setLayout(plot2D1Layout);
        plot2D1Layout.setHorizontalGroup(
            plot2D1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        plot2D1Layout.setVerticalGroup(
            plot2D1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 405, Short.MAX_VALUE)
        );

        jSplitPane2.setRightComponent(plot2D1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 706, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void simulation1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simulation1ActionPerformed
        //System.out.println("action performed: "+evt.getActionCommand());
        if(evt.getActionCommand()=="redraw"){
            simulation1.placePathsOn(plot2D1);
            plot2D1.repaint();
        } else if(evt.getActionCommand()=="reset"){
            simulation1.placeInitialPointsOn(plot2D1);
            simulation1.placeGraphsOn(plot2D1);
            jTree1.setModel(simulation1.getTreeModel());
            if(evt.getSource()==simulation1){jScrollPane2.setViewportView(null);}
            simulation1.setAnimationCycle(plot2D1);
        } else if(evt.getActionCommand()=="animation"){
            simulation1.setAnimationCycle(plot2D1);
        }
    }//GEN-LAST:event_simulation1ActionPerformed

    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree1ValueChanged
        javax.swing.JPanel result=new javax.swing.JPanel();
        result.setLayout(new BoxLayout(result,BoxLayout.PAGE_AXIS));
        // result.setPreferredSize(new Dimension(200,200));
        // result.setMaximumSize(new Dimension(300,300));
        DefaultMutableTreeNode node=(DefaultMutableTreeNode)jTree1.getLastSelectedPathComponent();
        if(node==null){return;}
        switch(node.getDepth()){
        case 0:
            result.add(((simulation.Agent)node.getUserObject()).getPanel());
            break;
        case 1:
            result.add(((simulation.Team)node.getUserObject()).getPanel());
            break;
        case 2:
        }
        jScrollPane2.setViewportView(result);
    }//GEN-LAST:event_jTree1ValueChanged

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        simulation1.initStartingLocations();
        simulation1.run();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        simulation1.run();
    }//GEN-LAST:event_runButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTree jTree1;
    private specto.euclidean2.Plot2D plot2D1;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton runButton;
    // End of variables declaration//GEN-END:variables
        
    /** Returns an ImageIcon, or null if the path was invalid. */
    protected static ImageIcon createImageIcon(String path) {
        java.net.URL imgURL = PEGApplet.class.getResource(path);
        if (imgURL != null) {
            return new ImageIcon(imgURL);
        } else {
            System.err.println("Couldn't find file: " + path);
            return null;
        }
    } 
    
    static class MyTreeCellRenderer extends DefaultTreeCellRenderer {
        MyTreeCellRenderer(){super();}
        MyTreeCellRenderer(Icon t,Icon t2,Icon a){
            super();
            teamIcon=t;teamIcon2=t2;agentIcon=a;
            if(t!=null){this.setOpenIcon(t);}
            if(t2!=null){this.setClosedIcon(t2);}
            if(a!=null){setLeafIcon(a);}
        }
        private Icon teamIcon=null;
        private Icon teamIcon2=null;
        private Icon agentIcon=null;
        private DefaultMutableTreeNode curNode=null;
        //public Icon getLeafIcon(){return (agentIcon==null)?agentIcon:super.getLeafIcon();}
        public Color getTextSelectionColor(){
            if(curNode!=null){
                if(curNode.getUserObject() instanceof simulation.Team){return ((simulation.Team)curNode.getUserObject()).getColor();}
                if(curNode.getUserObject() instanceof simulation.Agent){return ((simulation.Agent)curNode.getUserObject()).getColor();}
            }
            return super.getTextSelectionColor();
        }
        public Color getTextNonSelectionColor() {
            if(curNode!=null){
                if(curNode.getUserObject() instanceof simulation.Team){return ((simulation.Team)curNode.getUserObject()).getColor();}
                if(curNode.getUserObject() instanceof simulation.Agent){return ((simulation.Agent)curNode.getUserObject()).getColor();}
            }
            return super.getTextNonSelectionColor();
        }
        public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel, boolean expanded, boolean leaf, int row, boolean hasFocus){
            if(value instanceof DefaultMutableTreeNode){curNode=(DefaultMutableTreeNode)value;}
            return super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);
        }
    }
}
