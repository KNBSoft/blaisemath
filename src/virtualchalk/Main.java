/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Main.java
 *
 * Created on Apr 29, 2010, 9:00:01 AM
 */

package virtualchalk;

import java.awt.geom.GeneralPath;
import javax.swing.UIManager;
import org.bm.firestorm.gestures.PolyReader;
import org.bm.firestorm.gestures.data.TrainContext;
import org.bm.firestorm.gestures.data.TrainGesture;
import org.bm.firestorm.gestures.ui.DrawPanel;
import org.bm.firestorm.gestures.ui.GestureEvent;
import visometry.plane.PlanePlotComponent;

/**
 *
 * @author ae3263
 */
public class Main extends javax.swing.JFrame {

    GraphModeListener graphML = new GraphModeListener();
    AlphaModeListener alphaML = new AlphaModeListener();
    CalcModeListener calcML = new CalcModeListener();
    GenericModeListener genericML = new GenericModeListener();

    /** Creates new form Main */
    public Main() {
        try { UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); } catch (Exception e) { }
        initComponents();
        chalkboard.setMaxNumberOfPaths(9999);
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gradientPanel1 = new virtualchalk.GradientPanel();
        jPanel2 = new javax.swing.JPanel();
        chalkboard = new org.bm.firestorm.gestures.ui.DrawPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputArea = new javax.swing.JTextArea();
        modePanel = new virtualchalk.ModePanel();
        planePlotComponent1 = new visometry.plane.PlanePlotComponent();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        gradientPanel1.setColor1(new java.awt.Color(102, 102, 102));
        gradientPanel1.setColor2(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(255, 255, 226));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        chalkboard.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chalkboardStateChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout chalkboardLayout = new org.jdesktop.layout.GroupLayout(chalkboard);
        chalkboard.setLayout(chalkboardLayout);
        chalkboardLayout.setHorizontalGroup(
            chalkboardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 575, Short.MAX_VALUE)
        );
        chalkboardLayout.setVerticalGroup(
            chalkboardLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 559, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(chalkboard, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(chalkboard, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        outputArea.setBackground(new java.awt.Color(0, 0, 0));
        outputArea.setColumns(20);
        outputArea.setForeground(new java.awt.Color(255, 255, 255));
        outputArea.setRows(5);
        jScrollPane1.setViewportView(outputArea);

        modePanel.setBackground(new java.awt.Color(51, 51, 51));

        org.jdesktop.layout.GroupLayout planePlotComponent1Layout = new org.jdesktop.layout.GroupLayout(planePlotComponent1);
        planePlotComponent1.setLayout(planePlotComponent1Layout);
        planePlotComponent1Layout.setHorizontalGroup(
            planePlotComponent1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 438, Short.MAX_VALUE)
        );
        planePlotComponent1Layout.setVerticalGroup(
            planePlotComponent1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 346, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout gradientPanel1Layout = new org.jdesktop.layout.GroupLayout(gradientPanel1);
        gradientPanel1.setLayout(gradientPanel1Layout);
        gradientPanel1Layout.setHorizontalGroup(
            gradientPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(gradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(modePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(gradientPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                    .add(planePlotComponent1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE))
                .addContainerGap())
        );
        gradientPanel1Layout.setVerticalGroup(
            gradientPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(gradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(gradientPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(modePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(gradientPanel1Layout.createSequentialGroup()
                        .add(planePlotComponent1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 346, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)))
                .addContainerGap())
        );

        getContentPane().add(gradientPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** This converts the user path into polynomial functions. */
    final PolyReader pr = new PolyReader();

    private void chalkboardStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chalkboardStateChanged
        TrainGesture inputGesture = new TrainGesture(TrainContext.NONE, pr.convertPath(getLastPath()));
        GestureEvent ge = new GestureEvent(this, inputGesture);
        switch (modePanel.mode) {
            case ALPHA: alphaML.gesturePerformed(ge); break;
            case GRAPH: graphML.gesturePerformed(ge); break;
            case CALC: calcML.gesturePerformed(ge); break;
        }
        if (ge.getGesture() != null)
            genericML.gesturePerformed(ge);
    }//GEN-LAST:event_chalkboardStateChanged

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.bm.firestorm.gestures.ui.DrawPanel chalkboard;
    private virtualchalk.GradientPanel gradientPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private virtualchalk.ModePanel modePanel;
    private javax.swing.JTextArea outputArea;
    private visometry.plane.PlanePlotComponent planePlotComponent1;
    // End of variables declaration//GEN-END:variables

    DrawPanel getChalkboard() { return chalkboard; }
    ModePanel getModePanel() { return modePanel; }
    PlanePlotComponent getPlot() { return planePlotComponent1; }
    GeneralPath getLastPath() { return chalkboard.getLastPath(); }
    void appendToOutput(String str) { outputArea.append(str); }

}
